#!/usr/bin/env zsh

setopt numeric_glob_sort

if [[ ${${(s./.)PWD}[-1]} != "md.wettbewerb2024" ]]; then {
    print -Pu2 "%F{red}calc_overview must be run from md.wettbewerb2024 dir.%f"
    return 1
}; fi

if (( ARGC != 2 )); then {
    print -Pu2 "%F{red}Incorrect arguments%f"
    print -Pu2 "Usage: run_all seconds perturbation"
    return 2
}; fi

if [[ $HOST == "compute" ]]; then
    logpath="tsunami-logs"
elif [[ $HOST == "LDELL-CT" ]]; then
    logpath="ldell-logs"
elif [[ ${HOST[-18,-1]} == "itc.rwth-aachen.de" ]]; then
    logpath="slurm-logs"
elif [[ $HOST == "algieba" ]]; then
    logpath="algieba-logs"
else
    logpath="logs"
fi

if [[ ! -d ${logpath} ]] {
    print -Pu2 "%F{red}Logpath %B${logpath}%b not found.%f"
    mkdir -p ${logpath} || return 3
}

print -Pu2 "%F{green}Saving logs to %B${logpath}%b.%f"

typeset -i runtime=$1
print -Pu2 "%F{blue}Running graph_optimization $(./bin/graph_optimization --version) for ${runtime} seconds and with max_perturbation=$2%f"

typeset -A scores=()
cd -q result_files
for f in *_score_*.txt(on) ; do {
    test_case=${${(s._score_.)f}[1]}
    scores+=( [${test_case}]=${f} )
}; done

cd -q ..
typeset -i caseID=0
for k v in ${(Akv)scores} ; do {
    echo "$(date --rfc-3339=seconds) Running graph_optimization $(./bin/graph_optimization --version) for $1 seconds and with max_perturbation=$2" | tee -a ${logpath}/${caseID}.log
    ./bin/graph_optimization input_files/${k}.txt result_files/${v} $runtime $2 | tee -a ${logpath}/${caseID}.log &
    caseID+=1
}; done

sleep $runtime
